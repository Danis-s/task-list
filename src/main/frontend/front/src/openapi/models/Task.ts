/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Task
 */
export interface Task {
    /**
     * 
     * @type {number}
     * @memberof Task
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Task
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Task
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof Task
     */
    created?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Task
     */
    edited?: Date;
    /**
     * 
     * @type {string}
     * @memberof Task
     */
    taskStatus?: TaskTaskStatusEnum;
}

/**
* @export
* @enum {string}
*/
export enum TaskTaskStatusEnum {
    Created = 'CREATED',
    Process = 'PROCESS',
    Finished = 'FINISHED'
}

export function TaskFromJSON(json: any): Task {
    return TaskFromJSONTyped(json, false);
}

export function TaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): Task {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'edited': !exists(json, 'edited') ? undefined : (new Date(json['edited'])),
        'taskStatus': !exists(json, 'taskStatus') ? undefined : json['taskStatus'],
    };
}

export function TaskToJSON(value?: Task | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'description': value.description,
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
        'edited': value.edited === undefined ? undefined : (value.edited.toISOString()),
        'taskStatus': value.taskStatus,
    };
}

